
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000     0x1870
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208      0x2c8 main.o
                0x0000000000000208                instruccion(arm, char)
                0x000000000000027c                read_command()
                0x00000000000002d8                move_arm(arm, arm, arm, arm, char, char)
 .text.startup  0x00000000000004d0      0x5bc main.o
                0x00000000000004d0                main
 .text          0x0000000000000a8c      0x350 soc-hw.o
                0x0000000000000a8c                tic_isr
                0x0000000000000ac0                isr_null
                0x0000000000000ac4                irq_handler
                0x0000000000000b20                isr_init
                0x0000000000000b4c                isr_register
                0x0000000000000b68                isr_unregister
                0x0000000000000b90                msleep
                0x0000000000000bcc                nsleep
                0x0000000000000c00                tic_init
                0x0000000000000c54                uart_init
                0x0000000000000c58                uart_getchar
                0x0000000000000c80                uart_putchar
                0x0000000000000ca8                uart_putstr
                0x0000000000000ce0                uart1_init
                0x0000000000000ce4                uart1_getchar
                0x0000000000000d0c                uart1_putchar
                0x0000000000000d34                uart1_putstr
                0x0000000000000d6c                fifo_read
                0x0000000000000d88                fifo_write
                0x0000000000000da4                fifo_state
                0x0000000000000dc0                fifo_reset
 .text          0x0000000000000ddc      0x3b8 pwm.o
                0x0000000000000ddc                pwm::pause()
                0x0000000000000df8                pwm::pwm_en(int, unsigned int)
                0x0000000000000e88                pwm::pwm_duty(int, unsigned int)
                0x0000000000000f18                pwm::pwm_period(int, unsigned int)
                0x0000000000000fa8                pwm::pwm_geten(unsigned int)
                0x000000000000104c                pwm::pwm_getduty(unsigned int)
                0x00000000000010f0                pwm::pwm_getperiod(unsigned int)
 .text          0x0000000000001194      0x294 servos.o
                0x0000000000001194                arm::init()
                0x00000000000011f8                arm::home()
                0x000000000000122c                arm::derecha()
                0x00000000000012a8                arm::izquierda()
                0x0000000000001324                arm::set_serv(int, int)
                0x00000000000013d4                arm::calib(char, int)
 .text          0x0000000000001428      0x448 cam.o
                0x0000000000001428                cam::reset()
                0x00000000000014b8                cam::takepicture()
                0x0000000000001558                cam::getsize()
                0x0000000000001624                cam::sendpicture()
                0x00000000000017d0                cam::stoptaking()
                0x0000000000001870                _etext = .

.rodata         0x0000000000001870      0x320
                0x0000000000001870                . = ALIGN (0x4)
                0x0000000000001870                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000001870       0x70 main.o
 .rodata.str1.4
                0x00000000000018e0      0x1a5 main.o
                                        0x1a8 (size before relaxing)
 *fill*         0x0000000000001a85        0x3 
 .rodata.cst4   0x0000000000001a88       0x60 soc-hw.o
 .rodata.str1.4
                0x0000000000001ae8       0x14 cam.o
 .rodata.cst4   0x0000000000001afc       0x28 cam.o
 .rodata        0x0000000000001b24       0x6c cam.o
 *(.rodata1)
                0x0000000000001b90                _erodata = .

.data           0x0000000000001b90       0x14
                0x0000000000001b90                . = ALIGN (0x4)
                0x0000000000001b90                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000001b90        0x0 crt0ram.o
 .data          0x0000000000001b90        0x1 main.o
                0x0000000000001b90                C
 *fill*         0x0000000000001b91        0x3 
 .data          0x0000000000001b94       0x10 soc-hw.o
                0x0000000000001b94                fifo0
                0x0000000000001b98                timer0
                0x0000000000001b9c                uart1
                0x0000000000001ba0                uart0
 .data          0x0000000000001ba4        0x0 pwm.o
 .data          0x0000000000001ba4        0x0 servos.o
 .data          0x0000000000001ba4        0x0 cam.o
 *(.data1)
                0x0000000000001bb0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000001ba4                _edata = .

.bss            0x0000000000001ba4       0xac
                0x0000000000001ba4                . = ALIGN (0x4)
                0x0000000000001ba4                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000001ba4        0x0 crt0ram.o
 .bss           0x0000000000001ba4       0x28 main.o
                0x0000000000001ba4                command_array
                0x0000000000001bb8                adr
                0x0000000000001bbc                val
                0x0000000000001bc0                dir
                0x0000000000001bc4                inst
                0x0000000000001bc8                br
 .bss           0x0000000000001bcc        0x0 soc-hw.o
 .bss           0x0000000000001bcc        0x0 pwm.o
 .bss           0x0000000000001bcc        0x0 servos.o
 .bss           0x0000000000001bcc        0x0 cam.o
 *(COMMON)
 COMMON         0x0000000000001bcc       0x84 soc-hw.o
                0x0000000000001bcc                isr_table
                0x0000000000001c4c                tic_msec
                0x0000000000001c50                _ebss = .
                0x0000000000001c50                _end = .
                0x000000000000fffc                PROVIDE (_fstack = ((ORIGIN (ram) + LENGTH (ram)) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
LOAD pwm.o
LOAD servos.o
LOAD cam.o
OUTPUT(image elf32-lm32)

.debug_frame    0x0000000000000000      0x454
 .debug_frame   0x0000000000000000       0xb8 main.o
 .debug_frame   0x00000000000000b8      0x178 soc-hw.o
 .debug_frame   0x0000000000000230       0x94 pwm.o
 .debug_frame   0x00000000000002c4       0xc4 servos.o
 .debug_frame   0x0000000000000388       0xcc cam.o

.debug_info     0x0000000000000000     0x2979
 .debug_info    0x0000000000000000      0xf29 main.o
 .debug_info    0x0000000000000f29      0x53b soc-hw.o
 .debug_info    0x0000000000001464      0x54c pwm.o
 .debug_info    0x00000000000019b0      0x862 servos.o
 .debug_info    0x0000000000002212      0x767 cam.o

.debug_abbrev   0x0000000000000000      0x9ac
 .debug_abbrev  0x0000000000000000      0x2cb main.o
 .debug_abbrev  0x00000000000002cb      0x252 soc-hw.o
 .debug_abbrev  0x000000000000051d      0x14d pwm.o
 .debug_abbrev  0x000000000000066a      0x188 servos.o
 .debug_abbrev  0x00000000000007f2      0x1ba cam.o

.debug_loc      0x0000000000000000      0x89d
 .debug_loc     0x0000000000000000      0x21a main.o
 .debug_loc     0x000000000000021a      0x15e soc-hw.o
 .debug_loc     0x0000000000000378      0x201 pwm.o
 .debug_loc     0x0000000000000579      0x12a servos.o
 .debug_loc     0x00000000000006a3      0x1fa cam.o

.debug_aranges  0x0000000000000000       0xa8
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 soc-hw.o
 .debug_aranges
                0x0000000000000048       0x20 pwm.o
 .debug_aranges
                0x0000000000000068       0x20 servos.o
 .debug_aranges
                0x0000000000000088       0x20 cam.o

.debug_ranges   0x0000000000000000       0xc8
 .debug_ranges  0x0000000000000000       0x50 main.o
 .debug_ranges  0x0000000000000050       0x18 soc-hw.o
 .debug_ranges  0x0000000000000068       0x60 cam.o

.debug_line     0x0000000000000000     0x2f6b
 .debug_line    0x0000000000000000      0xd65 main.o
 .debug_line    0x0000000000000d65      0x894 soc-hw.o
 .debug_line    0x00000000000015f9      0xcc1 pwm.o
 .debug_line    0x00000000000022ba      0x5ce servos.o
 .debug_line    0x0000000000002888      0x6e3 cam.o

.debug_str      0x0000000000000000      0x6bd
 .debug_str     0x0000000000000000      0x512 main.o
                                        0x543 (size before relaxing)
 .debug_str     0x0000000000000512      0x190 soc-hw.o
                                        0x2a7 (size before relaxing)
 .debug_str     0x00000000000006a2        0x8 pwm.o
                                        0x2d3 (size before relaxing)
 .debug_str     0x00000000000006aa        0xb servos.o
                                        0x374 (size before relaxing)
 .debug_str     0x00000000000006b5        0x8 cam.o
                                        0x297 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 soc-hw.o
 .comment       0x0000000000000011       0x12 pwm.o
 .comment       0x0000000000000011       0x12 servos.o
 .comment       0x0000000000000011       0x12 cam.o
